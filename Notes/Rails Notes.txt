Rails
    Ruby on Rails is a server-side web application development framework written in Ruby language b

Rails Scripts
    Rails provides us some excellent tools that are used to develop Rails application. These tools are packaged as scripts from command line.

    Following are the most useful Rails scripts used in Rails application:
        Rails Console
        WEBrick Web Server
        Generators
        Migrations

Installation
    Prerequisites
        rbenv
        ruby
        node
        mysql

    gem install bundler -v version          # bundler handles gemfile dependencies

    gem install rails -v version            # install specific version for rails

    rbenv rehash

    rails -v                                # check rails installation

    gem install mysql2                      # install mysql gem

Create Project
    Create a new folder and move to that folder in terminal, then Run
        rails new projectName -d mysql      # create new project with mysql as database

        cd projectName

    In database.yml update your uname and password in respective fields

    Create dev, prod and test Db as mentioned in database.yml


    rails server                            # start rails server

    rails server -p portNumber              # To start in specific port

    rails generate controller controllerName         # create controller

    rails destroy controller controllerName          # destroy controller use only if needed
    
    create a controller with name of your choice

    got to app > views > controller Name you entered > create a file 'index.html.erb'

    Put some test html code

    Now map the same file as root file in 'routes.rb' 

    routes.rb
        route 'controller#fileName'                 #controller - name of controller; filename - app > views > controllerName > fileName


Ruby Folder structure
    app                 -> It works as the remainder of this directory. Basically it organizes our application component. It holds MVC.
    app/assets          -> This folder contains static files required for application's front-end grouped into folders based on their type.
    app/controllers     -> All the controller files are stored here. A controller handles all the web requests from the user.
    app/helpers         -> It contains all the helper functions to assist MVC.
    app/mailers         -> It contains mail specific functions for the application.
    app/models          -> It contains the models and data stored in our application's database.
    app/views           -> This folder contains the display templates to fill data in our application.
    bin                 -> It basically contains Rails script that start your app. It can also contain other scripts use to setup, upgrade or run the app.
    config              -> It configures our application's database, routes and more.
    db                  -> It contains our current database schema and database migrations.
    lib                 -> It contains extended module for your application.
    log                 -> It contains application log files.
    public              -> It contains static files and compiled assets. This is the only folder seen by the world.
    test                -> It contains unit tests, other test apparatus and fixtures.
    tmp                 -> It contains temporary files like cache and pid files.
    vendor              -> It contains all third-party code like vendor gems.
    Gemfile             -> Here all your app's gem dependencies are declared. It is mandatory as it includes Rails core gems among other gems.
    Gemfile.lock        -> It holds gems dependency tree including all versions for the app.
    README.md           -> It is a brief instruction manual for your application.
    Rakefile            -> It locates and loads tasks that can be run from the command line.
    config.ru           -> Rack configuration for Rack based servers used to start the application.
